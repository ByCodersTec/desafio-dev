{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoFocus\", \"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"defaultListboxOpen\", \"defaultValue\", \"disabled\", \"listboxOpen\", \"onChange\", \"onListboxOpenChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useControlled as useControlled } from '@mui/utils';\nimport { flattenOptionGroups, getOptionsFromChildren } from '../SelectUnstyled/utils';\nimport useSelect from '../SelectUnstyled/useSelect';\nimport { appendOwnerState } from '../utils';\nimport PopperUnstyled from '../PopperUnstyled';\nimport { SelectUnstyledContext } from '../SelectUnstyled/SelectUnstyledContext';\nimport composeClasses from '../composeClasses';\nimport { getSelectUnstyledUtilityClass } from '../SelectUnstyled/selectUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction defaultRenderMultipleValues(selectedOptions) {\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: selectedOptions.map(o => o.label).join(', ')\n  });\n}\n\nfunction useUtilityClasses(ownerState) {\n  const {\n    active,\n    disabled,\n    open,\n    focusVisible\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible', active && 'active', open && 'expanded'],\n    listbox: ['listbox', disabled && 'disabled'],\n    popper: ['popper']\n  };\n  return composeClasses(slots, getSelectUnstyledUtilityClass, {});\n}\n/**\n * The foundation for building custom-styled multi-selection select components.\n */\n\n\nconst MultiSelectUnstyled = /*#__PURE__*/React.forwardRef(function MultiSelectUnstyled(props, ref) {\n  var _props$renderValue, _ref, _components$Listbox, _components$Popper, _componentsProps$list, _componentsProps$list2, _componentsProps$root, _componentsProps$list3, _componentsProps$popp;\n\n  const {\n    autoFocus,\n    children,\n    className,\n    component,\n    components = {},\n    componentsProps = {},\n    defaultListboxOpen = false,\n    defaultValue = [],\n    disabled: disabledProp,\n    listboxOpen: listboxOpenProp,\n    onChange,\n    onListboxOpenChange,\n    value: valueProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const renderValue = (_props$renderValue = props.renderValue) != null ? _props$renderValue : defaultRenderMultipleValues;\n  const [groupedOptions, setGroupedOptions] = React.useState([]);\n  const options = React.useMemo(() => flattenOptionGroups(groupedOptions), [groupedOptions]);\n  const [listboxOpen, setListboxOpen] = useControlled({\n    controlled: listboxOpenProp,\n    default: defaultListboxOpen,\n    name: 'MultiSelectUnstyled',\n    state: 'listboxOpen'\n  });\n  React.useEffect(() => {\n    setGroupedOptions(getOptionsFromChildren(children));\n  }, [children]);\n  const [buttonDefined, setButtonDefined] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const Button = (_ref = component != null ? component : components.Root) != null ? _ref : 'button';\n  const ListboxRoot = (_components$Listbox = components.Listbox) != null ? _components$Listbox : 'ul';\n  const Popper = (_components$Popper = components.Popper) != null ? _components$Popper : PopperUnstyled;\n\n  const handleButtonRefChange = element => {\n    buttonRef.current = element;\n\n    if (element != null) {\n      setButtonDefined(true);\n    }\n  };\n\n  const handleButtonRef = useForkRef(ref, handleButtonRefChange);\n  const handleListboxRef = useForkRef(listboxRef, (_componentsProps$list = componentsProps.listbox) == null ? void 0 : _componentsProps$list.ref);\n  React.useEffect(() => {\n    if (autoFocus) {\n      buttonRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  const handleOpenChange = isOpen => {\n    setListboxOpen(isOpen);\n    onListboxOpenChange == null ? void 0 : onListboxOpenChange(isOpen);\n  };\n\n  const {\n    buttonActive,\n    buttonFocusVisible,\n    disabled,\n    getButtonProps,\n    getListboxProps,\n    getOptionProps,\n    getOptionState,\n    value\n  } = useSelect({\n    buttonComponent: Button,\n    buttonRef: handleButtonRef,\n    defaultValue,\n    disabled: disabledProp,\n    listboxId: (_componentsProps$list2 = componentsProps.listbox) == null ? void 0 : _componentsProps$list2.id,\n    listboxRef: handleListboxRef,\n    multiple: true,\n    onChange,\n    onOpenChange: handleOpenChange,\n    open: listboxOpen,\n    options,\n    value: valueProp\n  });\n\n  const ownerState = _extends({}, props, {\n    active: buttonActive,\n    defaultListboxOpen,\n    disabled,\n    focusVisible: buttonFocusVisible,\n    open: listboxOpen,\n    renderValue,\n    value\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const selectedOptions = React.useMemo(() => {\n    if (value == null) {\n      return [];\n    }\n\n    return options.filter(o => value.includes(o.value));\n  }, [options, value]);\n  const buttonProps = appendOwnerState(Button, _extends({}, getButtonProps(), other, componentsProps.root, {\n    className: clsx(className, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className, classes.root)\n  }), ownerState);\n  const listboxProps = appendOwnerState(ListboxRoot, _extends({}, getListboxProps(), componentsProps.listbox, {\n    className: clsx((_componentsProps$list3 = componentsProps.listbox) == null ? void 0 : _componentsProps$list3.className, classes.listbox)\n  }), ownerState); // Popper must be a (non-host) component, therefore ownerState will be present within the props\n\n  const popperProps = appendOwnerState(Popper, _extends({\n    open: listboxOpen,\n    anchorEl: buttonRef.current,\n    placement: 'bottom-start',\n    disablePortal: true,\n    role: undefined\n  }, componentsProps.popper, {\n    className: clsx((_componentsProps$popp = componentsProps.popper) == null ? void 0 : _componentsProps$popp.className, classes.popper)\n  }), ownerState);\n  const context = {\n    getOptionProps,\n    getOptionState,\n    listboxRef\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(Button, _extends({}, buttonProps, {\n      children: renderValue(selectedOptions)\n    })), buttonDefined && /*#__PURE__*/_jsx(Popper, _extends({}, popperProps, {\n      children: /*#__PURE__*/_jsx(ListboxRoot, _extends({}, listboxProps, {\n        children: /*#__PURE__*/_jsx(SelectUnstyledContext.Provider, {\n          value: context,\n          children: children\n        })\n      }))\n    }))]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MultiSelectUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the select element is focused during the first mount\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Select.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    Listbox: PropTypes.elementType,\n    Popper: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    listbox: PropTypes.object,\n    popper: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the select will be initially open.\n   * @default false\n   */\n  defaultListboxOpen: PropTypes.bool,\n\n  /**\n   * The default selected values. Use when the component is not controlled.\n   * @default []\n   */\n  defaultValue: PropTypes.array,\n\n  /**\n   * If `true`, the select is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Controls the open state of the select's listbox.\n   * @default undefined\n   */\n  listboxOpen: PropTypes.bool,\n\n  /**\n   * Callback fired when an option is selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see listboxOpen).\n   */\n  onListboxOpenChange: PropTypes.func,\n\n  /**\n   * Function that customizes the rendering of the selected values.\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * The selected values.\n   * Set to an empty array to deselect all options.\n   */\n  value: PropTypes.array\n} : void 0;\n/**\n * The foundation for building custom-styled multi-selection select components.\n *\n * Demos:\n *\n * - [Select](https://mui.com/base/react-select/)\n *\n * API:\n *\n * - [MultiSelectUnstyled API](https://mui.com/base/api/multi-select-unstyled/)\n */\n\nexport default MultiSelectUnstyled;","map":{"version":3,"sources":["C:/Users/guilherme.cavenaghi/Documents/GitHub/bycodersDesafio/frontend/node_modules/@mui/base/MultiSelectUnstyled/MultiSelectUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","unstable_useForkRef","useForkRef","unstable_useControlled","useControlled","flattenOptionGroups","getOptionsFromChildren","useSelect","appendOwnerState","PopperUnstyled","SelectUnstyledContext","composeClasses","getSelectUnstyledUtilityClass","jsx","_jsx","jsxs","_jsxs","defaultRenderMultipleValues","selectedOptions","Fragment","children","map","o","label","join","useUtilityClasses","ownerState","active","disabled","open","focusVisible","slots","root","listbox","popper","MultiSelectUnstyled","forwardRef","props","ref","_props$renderValue","_ref","_components$Listbox","_components$Popper","_componentsProps$list","_componentsProps$list2","_componentsProps$root","_componentsProps$list3","_componentsProps$popp","autoFocus","className","component","components","componentsProps","defaultListboxOpen","defaultValue","disabledProp","listboxOpen","listboxOpenProp","onChange","onListboxOpenChange","value","valueProp","other","renderValue","groupedOptions","setGroupedOptions","useState","options","useMemo","setListboxOpen","controlled","default","name","state","useEffect","buttonDefined","setButtonDefined","buttonRef","useRef","listboxRef","Button","Root","ListboxRoot","Listbox","Popper","handleButtonRefChange","element","current","handleButtonRef","handleListboxRef","focus","handleOpenChange","isOpen","buttonActive","buttonFocusVisible","getButtonProps","getListboxProps","getOptionProps","getOptionState","buttonComponent","listboxId","id","multiple","onOpenChange","classes","filter","includes","buttonProps","listboxProps","popperProps","anchorEl","placement","disablePortal","role","undefined","context","Provider","process","env","NODE_ENV","propTypes","bool","node","string","elementType","shape","object","array","func"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoFocus\", \"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"defaultListboxOpen\", \"defaultValue\", \"disabled\", \"listboxOpen\", \"onChange\", \"onListboxOpenChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useControlled as useControlled } from '@mui/utils';\nimport { flattenOptionGroups, getOptionsFromChildren } from '../SelectUnstyled/utils';\nimport useSelect from '../SelectUnstyled/useSelect';\nimport { appendOwnerState } from '../utils';\nimport PopperUnstyled from '../PopperUnstyled';\nimport { SelectUnstyledContext } from '../SelectUnstyled/SelectUnstyledContext';\nimport composeClasses from '../composeClasses';\nimport { getSelectUnstyledUtilityClass } from '../SelectUnstyled/selectUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction defaultRenderMultipleValues(selectedOptions) {\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: selectedOptions.map(o => o.label).join(', ')\n  });\n}\n\nfunction useUtilityClasses(ownerState) {\n  const {\n    active,\n    disabled,\n    open,\n    focusVisible\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible', active && 'active', open && 'expanded'],\n    listbox: ['listbox', disabled && 'disabled'],\n    popper: ['popper']\n  };\n  return composeClasses(slots, getSelectUnstyledUtilityClass, {});\n}\n/**\n * The foundation for building custom-styled multi-selection select components.\n */\n\n\nconst MultiSelectUnstyled = /*#__PURE__*/React.forwardRef(function MultiSelectUnstyled(props, ref) {\n  var _props$renderValue, _ref, _components$Listbox, _components$Popper, _componentsProps$list, _componentsProps$list2, _componentsProps$root, _componentsProps$list3, _componentsProps$popp;\n\n  const {\n    autoFocus,\n    children,\n    className,\n    component,\n    components = {},\n    componentsProps = {},\n    defaultListboxOpen = false,\n    defaultValue = [],\n    disabled: disabledProp,\n    listboxOpen: listboxOpenProp,\n    onChange,\n    onListboxOpenChange,\n    value: valueProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const renderValue = (_props$renderValue = props.renderValue) != null ? _props$renderValue : defaultRenderMultipleValues;\n  const [groupedOptions, setGroupedOptions] = React.useState([]);\n  const options = React.useMemo(() => flattenOptionGroups(groupedOptions), [groupedOptions]);\n  const [listboxOpen, setListboxOpen] = useControlled({\n    controlled: listboxOpenProp,\n    default: defaultListboxOpen,\n    name: 'MultiSelectUnstyled',\n    state: 'listboxOpen'\n  });\n  React.useEffect(() => {\n    setGroupedOptions(getOptionsFromChildren(children));\n  }, [children]);\n  const [buttonDefined, setButtonDefined] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const Button = (_ref = component != null ? component : components.Root) != null ? _ref : 'button';\n  const ListboxRoot = (_components$Listbox = components.Listbox) != null ? _components$Listbox : 'ul';\n  const Popper = (_components$Popper = components.Popper) != null ? _components$Popper : PopperUnstyled;\n\n  const handleButtonRefChange = element => {\n    buttonRef.current = element;\n\n    if (element != null) {\n      setButtonDefined(true);\n    }\n  };\n\n  const handleButtonRef = useForkRef(ref, handleButtonRefChange);\n  const handleListboxRef = useForkRef(listboxRef, (_componentsProps$list = componentsProps.listbox) == null ? void 0 : _componentsProps$list.ref);\n  React.useEffect(() => {\n    if (autoFocus) {\n      buttonRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  const handleOpenChange = isOpen => {\n    setListboxOpen(isOpen);\n    onListboxOpenChange == null ? void 0 : onListboxOpenChange(isOpen);\n  };\n\n  const {\n    buttonActive,\n    buttonFocusVisible,\n    disabled,\n    getButtonProps,\n    getListboxProps,\n    getOptionProps,\n    getOptionState,\n    value\n  } = useSelect({\n    buttonComponent: Button,\n    buttonRef: handleButtonRef,\n    defaultValue,\n    disabled: disabledProp,\n    listboxId: (_componentsProps$list2 = componentsProps.listbox) == null ? void 0 : _componentsProps$list2.id,\n    listboxRef: handleListboxRef,\n    multiple: true,\n    onChange,\n    onOpenChange: handleOpenChange,\n    open: listboxOpen,\n    options,\n    value: valueProp\n  });\n\n  const ownerState = _extends({}, props, {\n    active: buttonActive,\n    defaultListboxOpen,\n    disabled,\n    focusVisible: buttonFocusVisible,\n    open: listboxOpen,\n    renderValue,\n    value\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const selectedOptions = React.useMemo(() => {\n    if (value == null) {\n      return [];\n    }\n\n    return options.filter(o => value.includes(o.value));\n  }, [options, value]);\n  const buttonProps = appendOwnerState(Button, _extends({}, getButtonProps(), other, componentsProps.root, {\n    className: clsx(className, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className, classes.root)\n  }), ownerState);\n  const listboxProps = appendOwnerState(ListboxRoot, _extends({}, getListboxProps(), componentsProps.listbox, {\n    className: clsx((_componentsProps$list3 = componentsProps.listbox) == null ? void 0 : _componentsProps$list3.className, classes.listbox)\n  }), ownerState); // Popper must be a (non-host) component, therefore ownerState will be present within the props\n\n  const popperProps = appendOwnerState(Popper, _extends({\n    open: listboxOpen,\n    anchorEl: buttonRef.current,\n    placement: 'bottom-start',\n    disablePortal: true,\n    role: undefined\n  }, componentsProps.popper, {\n    className: clsx((_componentsProps$popp = componentsProps.popper) == null ? void 0 : _componentsProps$popp.className, classes.popper)\n  }), ownerState);\n  const context = {\n    getOptionProps,\n    getOptionState,\n    listboxRef\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(Button, _extends({}, buttonProps, {\n      children: renderValue(selectedOptions)\n    })), buttonDefined && /*#__PURE__*/_jsx(Popper, _extends({}, popperProps, {\n      children: /*#__PURE__*/_jsx(ListboxRoot, _extends({}, listboxProps, {\n        children: /*#__PURE__*/_jsx(SelectUnstyledContext.Provider, {\n          value: context,\n          children: children\n        })\n      }))\n    }))]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MultiSelectUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the select element is focused during the first mount\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Select.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    Listbox: PropTypes.elementType,\n    Popper: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    listbox: PropTypes.object,\n    popper: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the select will be initially open.\n   * @default false\n   */\n  defaultListboxOpen: PropTypes.bool,\n\n  /**\n   * The default selected values. Use when the component is not controlled.\n   * @default []\n   */\n  defaultValue: PropTypes.array,\n\n  /**\n   * If `true`, the select is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Controls the open state of the select's listbox.\n   * @default undefined\n   */\n  listboxOpen: PropTypes.bool,\n\n  /**\n   * Callback fired when an option is selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see listboxOpen).\n   */\n  onListboxOpenChange: PropTypes.func,\n\n  /**\n   * Function that customizes the rendering of the selected values.\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * The selected values.\n   * Set to an empty array to deselect all options.\n   */\n  value: PropTypes.array\n} : void 0;\n/**\n * The foundation for building custom-styled multi-selection select components.\n *\n * Demos:\n *\n * - [Select](https://mui.com/base/react-select/)\n *\n * API:\n *\n * - [MultiSelectUnstyled API](https://mui.com/base/api/multi-select-unstyled/)\n */\n\nexport default MultiSelectUnstyled;"]},"metadata":{},"sourceType":"module"}