{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { defaultListboxReducer, useListbox, ActionTypes } from '../ListboxUnstyled';\n\nfunction stateReducer(state, action) {\n  if (action.type === ActionTypes.blur || action.type === ActionTypes.optionHover || action.type === ActionTypes.setValue) {\n    return state;\n  }\n\n  const newState = defaultListboxReducer(state, action);\n\n  if (action.type !== ActionTypes.setHighlight && newState.highlightedValue === null && action.props.options.length > 0) {\n    return _extends({}, newState, {\n      highlightedValue: action.props.options[0]\n    });\n  }\n\n  return newState;\n}\n\nexport default function useMenu(parameters) {\n  const {\n    listboxRef: listboxRefProp,\n    open = false,\n    onClose,\n    listboxId\n  } = parameters;\n  const [menuItems, setMenuItems] = React.useState({});\n  const listboxRef = React.useRef(null);\n  const handleRef = useForkRef(listboxRef, listboxRefProp);\n  const registerItem = React.useCallback((id, metadata) => {\n    setMenuItems(previousState => {\n      const newState = _extends({}, previousState);\n\n      newState[id] = metadata;\n      return newState;\n    });\n  }, []);\n  const unregisterItem = React.useCallback(id => {\n    setMenuItems(previousState => {\n      const newState = _extends({}, previousState);\n\n      delete newState[id];\n      return newState;\n    });\n  }, []);\n  const {\n    getOptionState,\n    getOptionProps,\n    getRootProps,\n    highlightedOption,\n    setHighlightedValue: setListboxHighlight\n  } = useListbox({\n    options: Object.keys(menuItems),\n    optionStringifier: id => {\n      var _menuItems$id$ref$cur;\n\n      return menuItems[id].label || ((_menuItems$id$ref$cur = menuItems[id].ref.current) == null ? void 0 : _menuItems$id$ref$cur.innerText);\n    },\n    isOptionDisabled: id => {\n      var _menuItems$id;\n\n      return (menuItems == null ? void 0 : (_menuItems$id = menuItems[id]) == null ? void 0 : _menuItems$id.disabled) || false;\n    },\n    listboxRef: handleRef,\n    focusManagement: 'DOM',\n    id: listboxId,\n    stateReducer,\n    disabledItemsFocusable: true\n  });\n  const highlightFirstItem = React.useCallback(() => {\n    if (Object.keys(menuItems).length > 0) {\n      setListboxHighlight(menuItems[Object.keys(menuItems)[0]].id);\n    }\n  }, [menuItems, setListboxHighlight]);\n  const highlightLastItem = React.useCallback(() => {\n    if (Object.keys(menuItems).length > 0) {\n      setListboxHighlight(menuItems[Object.keys(menuItems)[Object.keys(menuItems).length - 1]].id);\n    }\n  }, [menuItems, setListboxHighlight]);\n  React.useEffect(() => {\n    if (!open) {\n      highlightFirstItem();\n    }\n  }, [open, highlightFirstItem]);\n\n  const createHandleKeyDown = otherHandlers => e => {\n    var _otherHandlers$onKeyD;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, e);\n\n    if (e.defaultPrevented) {\n      return;\n    }\n\n    if (e.key === 'Escape' && open) {\n      onClose == null ? void 0 : onClose();\n    }\n  };\n\n  const createHandleBlur = otherHandlers => e => {\n    var _listboxRef$current;\n\n    otherHandlers == null ? void 0 : otherHandlers.onBlur(e);\n\n    if (!((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(e.relatedTarget))) {\n      onClose == null ? void 0 : onClose();\n    }\n  };\n\n  React.useEffect(() => {\n    var _listboxRef$current2; // set focus to the highlighted item (but prevent stealing focus from other elements on the page)\n\n\n    if ((_listboxRef$current2 = listboxRef.current) != null && _listboxRef$current2.contains(document.activeElement) && highlightedOption !== null) {\n      var _menuItems$highlighte, _menuItems$highlighte2;\n\n      menuItems == null ? void 0 : (_menuItems$highlighte = menuItems[highlightedOption]) == null ? void 0 : (_menuItems$highlighte2 = _menuItems$highlighte.ref.current) == null ? void 0 : _menuItems$highlighte2.focus();\n    }\n  }, [highlightedOption, menuItems]);\n\n  const getListboxProps = otherHandlers => _extends({}, otherHandlers, getRootProps(_extends({}, otherHandlers, {\n    onBlur: createHandleBlur(otherHandlers),\n    onKeyDown: createHandleKeyDown(otherHandlers)\n  })), {\n    role: 'menu'\n  });\n\n  const getItemState = id => {\n    const {\n      disabled,\n      highlighted\n    } = getOptionState(id);\n    return {\n      disabled,\n      highlighted\n    };\n  };\n\n  React.useDebugValue({\n    menuItems,\n    highlightedOption\n  });\n  return {\n    registerItem,\n    unregisterItem,\n    menuItems,\n    getListboxProps,\n    getItemState,\n    getItemProps: getOptionProps,\n    highlightedOption,\n    highlightFirstItem,\n    highlightLastItem\n  };\n}","map":{"version":3,"sources":["C:/Users/guilherme.cavenaghi/Documents/GitHub/bycodersDesafio/frontEnd/node_modules/@mui/base/MenuUnstyled/useMenu.js"],"names":["_extends","React","unstable_useForkRef","useForkRef","defaultListboxReducer","useListbox","ActionTypes","stateReducer","state","action","type","blur","optionHover","setValue","newState","setHighlight","highlightedValue","props","options","length","useMenu","parameters","listboxRef","listboxRefProp","open","onClose","listboxId","menuItems","setMenuItems","useState","useRef","handleRef","registerItem","useCallback","id","metadata","previousState","unregisterItem","getOptionState","getOptionProps","getRootProps","highlightedOption","setHighlightedValue","setListboxHighlight","Object","keys","optionStringifier","_menuItems$id$ref$cur","label","ref","current","innerText","isOptionDisabled","_menuItems$id","disabled","focusManagement","disabledItemsFocusable","highlightFirstItem","highlightLastItem","useEffect","createHandleKeyDown","otherHandlers","e","_otherHandlers$onKeyD","onKeyDown","call","defaultPrevented","key","createHandleBlur","_listboxRef$current","onBlur","contains","relatedTarget","_listboxRef$current2","document","activeElement","_menuItems$highlighte","_menuItems$highlighte2","focus","getListboxProps","role","getItemState","highlighted","useDebugValue","getItemProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { defaultListboxReducer, useListbox, ActionTypes } from '../ListboxUnstyled';\n\nfunction stateReducer(state, action) {\n  if (action.type === ActionTypes.blur || action.type === ActionTypes.optionHover || action.type === ActionTypes.setValue) {\n    return state;\n  }\n\n  const newState = defaultListboxReducer(state, action);\n\n  if (action.type !== ActionTypes.setHighlight && newState.highlightedValue === null && action.props.options.length > 0) {\n    return _extends({}, newState, {\n      highlightedValue: action.props.options[0]\n    });\n  }\n\n  return newState;\n}\n\nexport default function useMenu(parameters) {\n  const {\n    listboxRef: listboxRefProp,\n    open = false,\n    onClose,\n    listboxId\n  } = parameters;\n  const [menuItems, setMenuItems] = React.useState({});\n  const listboxRef = React.useRef(null);\n  const handleRef = useForkRef(listboxRef, listboxRefProp);\n  const registerItem = React.useCallback((id, metadata) => {\n    setMenuItems(previousState => {\n      const newState = _extends({}, previousState);\n\n      newState[id] = metadata;\n      return newState;\n    });\n  }, []);\n  const unregisterItem = React.useCallback(id => {\n    setMenuItems(previousState => {\n      const newState = _extends({}, previousState);\n\n      delete newState[id];\n      return newState;\n    });\n  }, []);\n  const {\n    getOptionState,\n    getOptionProps,\n    getRootProps,\n    highlightedOption,\n    setHighlightedValue: setListboxHighlight\n  } = useListbox({\n    options: Object.keys(menuItems),\n    optionStringifier: id => {\n      var _menuItems$id$ref$cur;\n\n      return menuItems[id].label || ((_menuItems$id$ref$cur = menuItems[id].ref.current) == null ? void 0 : _menuItems$id$ref$cur.innerText);\n    },\n    isOptionDisabled: id => {\n      var _menuItems$id;\n\n      return (menuItems == null ? void 0 : (_menuItems$id = menuItems[id]) == null ? void 0 : _menuItems$id.disabled) || false;\n    },\n    listboxRef: handleRef,\n    focusManagement: 'DOM',\n    id: listboxId,\n    stateReducer,\n    disabledItemsFocusable: true\n  });\n  const highlightFirstItem = React.useCallback(() => {\n    if (Object.keys(menuItems).length > 0) {\n      setListboxHighlight(menuItems[Object.keys(menuItems)[0]].id);\n    }\n  }, [menuItems, setListboxHighlight]);\n  const highlightLastItem = React.useCallback(() => {\n    if (Object.keys(menuItems).length > 0) {\n      setListboxHighlight(menuItems[Object.keys(menuItems)[Object.keys(menuItems).length - 1]].id);\n    }\n  }, [menuItems, setListboxHighlight]);\n  React.useEffect(() => {\n    if (!open) {\n      highlightFirstItem();\n    }\n  }, [open, highlightFirstItem]);\n\n  const createHandleKeyDown = otherHandlers => e => {\n    var _otherHandlers$onKeyD;\n\n    otherHandlers == null ? void 0 : (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, e);\n\n    if (e.defaultPrevented) {\n      return;\n    }\n\n    if (e.key === 'Escape' && open) {\n      onClose == null ? void 0 : onClose();\n    }\n  };\n\n  const createHandleBlur = otherHandlers => e => {\n    var _listboxRef$current;\n\n    otherHandlers == null ? void 0 : otherHandlers.onBlur(e);\n\n    if (!((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(e.relatedTarget))) {\n      onClose == null ? void 0 : onClose();\n    }\n  };\n\n  React.useEffect(() => {\n    var _listboxRef$current2;\n\n    // set focus to the highlighted item (but prevent stealing focus from other elements on the page)\n    if ((_listboxRef$current2 = listboxRef.current) != null && _listboxRef$current2.contains(document.activeElement) && highlightedOption !== null) {\n      var _menuItems$highlighte, _menuItems$highlighte2;\n\n      menuItems == null ? void 0 : (_menuItems$highlighte = menuItems[highlightedOption]) == null ? void 0 : (_menuItems$highlighte2 = _menuItems$highlighte.ref.current) == null ? void 0 : _menuItems$highlighte2.focus();\n    }\n  }, [highlightedOption, menuItems]);\n\n  const getListboxProps = otherHandlers => _extends({}, otherHandlers, getRootProps(_extends({}, otherHandlers, {\n    onBlur: createHandleBlur(otherHandlers),\n    onKeyDown: createHandleKeyDown(otherHandlers)\n  })), {\n    role: 'menu'\n  });\n\n  const getItemState = id => {\n    const {\n      disabled,\n      highlighted\n    } = getOptionState(id);\n    return {\n      disabled,\n      highlighted\n    };\n  };\n\n  React.useDebugValue({\n    menuItems,\n    highlightedOption\n  });\n  return {\n    registerItem,\n    unregisterItem,\n    menuItems,\n    getListboxProps,\n    getItemState,\n    getItemProps: getOptionProps,\n    highlightedOption,\n    highlightFirstItem,\n    highlightLastItem\n  };\n}"]},"metadata":{},"sourceType":"module"}