let Return,Log,SequelizeConnection;_347‍.x([["default",()=>_347‍.o]]);_347‍.w("../Models/Return",[["default",["Return"],function(v){Return=v}]]);_347‍.w("../Models/Log",[["default",["Log"],function(v){Log=v}]]);_347‍.w("../Connections/SequelizeConnection",[["default",["SequelizeConnection"],function(v){SequelizeConnection=v}]]);



class LogRepository extends SequelizeConnection {
  constructor() {
    super();
  }

  async addLog(obj) {
    let retorno = JSON.stringify(obj.retorno);
    
    retorno = retorno.length >= 8000 ? retorno.substring(0, 7999) : retorno;

    let result = await Log.create({
      metodo: obj.metodo,
      url: obj.url,
      parametro: JSON.stringify(obj.parametro),
      retorno: retorno,
    });

    return new Return(200, 'OK', result);
  }
}

_347‍.d(new LogRepository());
